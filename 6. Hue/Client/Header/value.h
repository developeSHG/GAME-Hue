#ifndef value_h__
#define value_h__

const WORD		WINCX = 1280;
const WORD		WINCY = 720;

const WORD		VTXCNTX = 129;
const WORD		VTXCNTZ = 129;
const WORD		VTXITV = 1;

const float		GRAVITY = 11.8f;			// 중력 파워

const D3DXVECTOR3		g_vLook = D3DXVECTOR3(0.f, 0.f, 1.f);

const D3DXCOLOR GREY(D3DCOLOR_XRGB(128, 128, 128));
const D3DXCOLOR WHITE(D3DCOLOR_XRGB(255, 255, 255));
const D3DXCOLOR BLACK(D3DCOLOR_XRGB(0, 0, 0));
const D3DXCOLOR DARKGREY(D3DCOLOR_XRGB(57, 28, 23));
const D3DXCOLOR WHITEGREY(D3DCOLOR_XRGB(210, 205, 210));
const D3DXCOLOR MILDGREY(D3DCOLOR_XRGB(170, 170, 170));
const D3DXCOLOR MILDDARKGREY(D3DCOLOR_XRGB(190, 180, 190));

const D3DXCOLOR PIER(D3DCOLOR_XRGB(184, 117, 0));

const D3DXCOLOR RED(D3DCOLOR_XRGB(255, 50, 50));
const D3DXCOLOR ORANGE(D3DCOLOR_XRGB(255, 148, 84));

const D3DXCOLOR GREEN(D3DCOLOR_XRGB(30, 255, 30));
const D3DXCOLOR YELLOW(D3DCOLOR_XRGB(226, 198, 19));

const D3DXCOLOR BLUE(D3DCOLOR_XRGB(0, 128, 192));
const D3DXCOLOR SKYBLUE(D3DCOLOR_XRGB(50, 255, 255));
const D3DXCOLOR PINK(D3DCOLOR_XRGB(255, 128, 255));
const D3DXCOLOR PURPLE(D3DCOLOR_XRGB(255, 30, 255));


const D3DXCOLOR FIRERED(D3DCOLOR_XRGB(157, 9, 35));
const D3DXCOLOR FIREYELLOW(D3DCOLOR_XRGB(249, 238, 36));
const D3DXCOLOR FIREORANGE(D3DCOLOR_XRGB(254, 99, 5));



D3DMATERIAL9 InitMtrl(D3DXCOLOR a, D3DXCOLOR d, D3DXCOLOR s, D3DXCOLOR e, float p)
{
	D3DMATERIAL9 mtrl;
	mtrl.Ambient = a;
	mtrl.Diffuse = d;
	mtrl.Specular = s;
	mtrl.Emissive = e;
	mtrl.Power = p;
	return mtrl;
}

const D3DMATERIAL9 WHITE_MTRL = InitMtrl(WHITE, WHITE, WHITE, BLACK, 8.f);
const D3DMATERIAL9 RED_MTRL = InitMtrl(RED, RED, RED, BLACK, 8.f);
const D3DMATERIAL9 GREEN_MTRL = InitMtrl(GREEN, GREEN, GREEN, BLACK, 8.f);
const D3DMATERIAL9 BLUE_MTRL = InitMtrl(BLUE, BLUE, BLUE, BLACK, 8.f);


#define GET_TIME				Engine::CTimeMgr::GetInstance()->GetTime()
#define GET_CONSTANTTIME		Engine::CTimeMgr::GetInstance()->GetConstantTime()

#endif // value_h__
